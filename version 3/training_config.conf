[input_paths]
# csv files paths for actual lai and images names separated by comma
csv_file = ['data/data1.csv', 'data/data2.csv']

# images folders paths separated by comma
images_dir = ['data/train1/rgb/', 'data/train2/rgb/']


[output_paths]
# output directory
output_dir = version001/

# vgg reshaped images directory
vgg_images = vgg_reshaped/

# name of the model to be saved for vgg
vgg_model_name=trained_models/vgg_regressor.hdf5


[vgg_train_paths]
# training images directory
train_images_dir = train/rgb/

# training csv file
train_csv = train.csv


[vgg_val_paths]
# validation images directory
val_images_dir = val/rgb/

# validation csv file
val_csv = val.csv


[vgg_test_paths]
# test images directory
test_images_dir = test/rgb/

# test csv file
test_csv = test.csv


[vgg_model_params]
# define image format for image data
img_format = ['.jpg', '.png', '.tif']

# image names column
x_col = image_name

# target name
y_col = target

# learning rate to train model on
lr=1e-4

# training batch size
train_batch=4

# validation bath size
val_batch=2

# test batch size
test_batch=2

# target size of images
target_size = (1024, 256)

# image color format
image_color_mode = rgb

# whether to use pretrained model, if yes then pretrained weights file else None
pretrained_weights = None

# whether to load initial weights or random weights
initial_weights=True